CREATE TABLE IF NOT EXISTS users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255),
    login    VARCHAR(255) NOT NULL,
    name     VARCHAR(255),
    birthday DATE CHECK (birthday <= CURRENT_DATE),
    CONSTRAINT login_is_not_empty CHECK (login <> ''),
    CONSTRAINT no_spaces_in_login CHECK (login NOT IN (' '))
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INTEGER PRIMARY KEY,
    name     VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id   INTEGER REFERENCES users (user_id),
    friend_id INTEGER REFERENCES users (user_id),
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS rating_MPA
(
    MPA_id INTEGER PRIMARY KEY,
    name   VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  VARCHAR(255),
    release_date DATE,
    duration     INTEGER,
    rate         INTEGER,
    MPA_id       INTEGER REFERENCES rating_MPA (MPA_id),
    CONSTRAINT name_is_not_empty CHECK (name <> ''),
    CONSTRAINT duration_positive CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS likes
(
    user_id INTEGER REFERENCES users (user_id),
    film_id INTEGER REFERENCES films (film_id),
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS film_genre_line
(
    film_id  INTEGER REFERENCES films (film_id),
    genre_id INTEGER REFERENCES genres (genre_id),
    PRIMARY KEY (film_id, genre_id)
);


